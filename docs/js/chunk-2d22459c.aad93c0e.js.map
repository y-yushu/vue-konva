{"version":3,"sources":["webpack:///./src/views/shapes/Line-Simple.vue","webpack:///src/views/shapes/Line-Simple.vue","webpack:///./src/views/shapes/Line-Simple.vue?fc52","webpack:///./src/views/shapes/Line-Simple.vue?cf53"],"names":["render","_vm","this","_c","_self","staticClass","_m","ref","attrs","on","$event","addElem","line1","_v","line2","line3","staticRenderFns","name","mixins","data","points","stroke","strokeWidth","lineCap","lineJoin","dash","methods","layer","console","getLineLoca","ar0","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACJ,EAAIK,GAAG,GAAGH,EAAG,MAAM,CAACI,IAAI,YAAYF,YAAY,YAAYG,MAAM,CAAC,GAAK,eAAeL,EAAG,SAAS,CAACA,EAAG,SAAS,CAACA,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,WAAWC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIU,QAAQV,EAAIW,UAAU,CAACX,EAAIY,GAAG,WAAWV,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,WAAWC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIU,QAAQV,EAAIa,UAAU,CAACb,EAAIY,GAAG,WAAWV,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,WAAWC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIU,QAAQV,EAAIc,UAAU,CAACd,EAAIY,GAAG,YAAY,IAAI,IAAI,IAE/kBG,EAAkB,CAAC,WAAY,IAAIf,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,KAAK,CAACF,EAAIY,GAAG,e,iCCiBlF,GACfI,kBACAC,gBACAC,OACA,OACAP,OACAQ,mCACAC,aACAC,eACAC,gBACAC,kBAEAV,OACAM,mCACAC,eACAC,cACAE,iBAKAC,cAEAV,OACAK,mCACAC,cACAC,eACAC,gBACAC,iBAMAC,wBAIAC,SAKAf,WACA,gCACA,sBACAS,4BAEA,kBACAO,SACAA,cACAC,yBAMAC,cACA,mCACA,KACA,sBACA,2CACA,qCACAC,YAEA,YCpFoW,I,YCOhWC,EAAY,eACd,EACA/B,EACAgB,GACA,EACA,KACA,KACA,MAIa,aAAAe,E","file":"js/chunk-2d22459c.aad93c0e.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"app-container\"},[_vm._m(0),_c('div',{ref:\"container\",staticClass:\"container\",attrs:{\"id\":\"container\"}}),_c('el-row',[_c('el-col',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.addElem(_vm.line1)}}},[_vm._v(\"创建折线1\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.addElem(_vm.line2)}}},[_vm._v(\"创建折线2\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.addElem(_vm.line3)}}},[_vm._v(\"创建折线3\")])],1)],1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_c('h1',[_vm._v(\"创建折线1\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"app-container\">\r\n    <div><h1>创建折线1</h1></div>\r\n    <div id=\"container\" ref=\"container\" class=\"container\" />\r\n    <el-row>\r\n      <el-col>\r\n        <el-button type=\"primary\" @click=\"addElem(line1)\">创建折线1</el-button>\r\n        <el-button type=\"primary\" @click=\"addElem(line2)\">创建折线2</el-button>\r\n        <el-button type=\"primary\" @click=\"addElem(line3)\">创建折线3</el-button>\r\n        <!--<el-button type=\"primary\" @click=\"clearDraw\">清空画布</el-button>-->\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { konva } from '@/mixins'\r\nimport Konva from 'konva'\r\n\r\nexport default {\r\n  name: 'LineSimple',\r\n  mixins: [konva],\r\n  data() {\r\n    return {\r\n      line1: {\r\n        points: [5, 70, 140, 23, 250, 60, 300, 20], // 这个是折线的点,两个一组,生成时我再随机生成,顶替掉这个\r\n        stroke: 'red',\r\n        strokeWidth: 15,\r\n        lineCap: 'round',\r\n        lineJoin: 'round'\r\n      },\r\n      line2: {\r\n        points: [5, 70, 140, 23, 250, 60, 300, 20],\r\n        stroke: 'green',\r\n        strokeWidth: 2,\r\n        lineJoin: 'round',\r\n        /*\r\n         * 长度为33px的线段\r\n         * 间隔为10px\r\n         */\r\n        dash: [33, 10]\r\n      },\r\n      line3: {\r\n        points: [5, 70, 140, 23, 250, 60, 300, 20],\r\n        stroke: 'blue',\r\n        strokeWidth: 10,\r\n        lineCap: 'round',\r\n        lineJoin: 'round',\r\n        /*\r\n         * 带间隔的长度为29px的线段\r\n         * 为20px，后面是0.001px(点)的线段\r\n         * 然后是20px的间隔\r\n         */\r\n        dash: [29, 20, 0.001, 20]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 按钮--创建图形 yyshu 20201031\r\n     * @param rect 图形属性\r\n     */\r\n    addElem(prop) {\r\n      const layer = this.pageLayer[0].layer\r\n      const item = Object.assign({}, prop, {\r\n        points: this.getLineLoca()\r\n      })\r\n      const graph = new Konva.Line(item)\r\n      layer.add(graph)\r\n      layer.batchDraw()\r\n      console.log('创建图形成功', graph)\r\n    },\r\n    /**\r\n     * 调用--生成折线位置\r\n     * @returns {*[]}\r\n     */\r\n    getLineLoca() {\r\n      const nu = parseInt(20 * Math.random())\r\n      const ar0 = []\r\n      for (let i = 0; i <= nu; i++) {\r\n        const sj1 = parseInt(40 * Math.random()) + i * 20 + 50\r\n        const sj2 = parseInt(40 * Math.random()) + i * 20 + 50\r\n        ar0.push(sj1, sj2)\r\n      }\r\n      return ar0\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Line-Simple.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Line-Simple.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Line-Simple.vue?vue&type=template&id=9e18b526&\"\nimport script from \"./Line-Simple.vue?vue&type=script&lang=js&\"\nexport * from \"./Line-Simple.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}